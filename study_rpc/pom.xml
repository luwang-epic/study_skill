<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>study_skill</artifactId>
        <groupId>com.wang</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>study_rpc</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- thrift需要的依赖包 -->
        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
            <version>0.15.0</version>
        </dependency>

        <!-- thrift需要的日志依赖包 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.25</version>
        </dependency>

        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>1.42.0</version>
        </dependency>

        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>1.42.0</version>
        </dependency>

        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>1.42.0</version>
        </dependency>
    </dependencies>

    <build>
        <!-- protobuf需要排除这个，否则编译出错 -->
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <!--   maven thrift插件  因为依赖thrift生成的类，因此需要编译之前生成   -->
            <plugin>
                <groupId>org.apache.thrift.tools</groupId>
                <artifactId>maven-thrift-plugin</artifactId>
                <version>0.1.11</version>
                <configuration>
                    <!-- 如果配置了环境变量，这个可以不些 -->
                    <!-- <thriftExecutable>D:/java/local/thrift/thrift.exe</thriftExecutable> -->
                    <!-- 源文件所在的目录 -->
                    <thriftSourceRoot>src/main/thrift</thriftSourceRoot>
                    <!-- 如果制定了输出目录，会先删除这个目录下的所有文件，这个需要慎重；
                            默认会在target/generated-sources/thrift中生成代码，
                            可以将这个目前添加为source，从而可以正常使用，打包也不会影响。
                            如果不使用这个默认目录，可以使用一个额外的目录，然后将生成的代码类copy到类对应的包下，
                            这样会比较麻烦，每次修改都需要重新copy，否则会不一致-->
                    <!-- <outputDirectory>src/main/output</outputDirectory> -->
                    <!-- 这个需要加，否则一直编译不成功 -->
                    <generator>java</generator>
                </configuration>
                <executions>
                    <execution>
                        <id>thrift-sources</id>
                        <!-- 生成时期，编译之前，因此需要生成源这个阶段来生成代码 -->
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <!-- <execution> -->
                    <!--     <id>thrift-test-sources</id> -->
                    <!--     <phase>generate-test-sources</phase> -->
                    <!--     <goals> -->
                    <!--         <goal>testCompile</goal> -->
                    <!--     </goals> -->
                    <!-- </execution> -->
                </executions>
            </plugin>

            <!-- protobuf maven插件 -->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <pluginId>grpc-java</pluginId>
                    <!-- 通过这个来生成代码 -->
                    <protocArtifact>com.google.protobuf:protoc:3.17.3:exe:${os.detected.classifier}</protocArtifact>
                    <!-- 这个插件可以进一步简化开发 -->
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.42.0:exe:${os.detected.classifier}</pluginArtifact>

                    <!-- 默认为src/main/proto文件夹下的proto文件来进行编译生成代码 -->
                    <!-- <protoSourceRoot>${project.basedir}/src/main/proto</protoSourceRoot> -->
                    <!-- 生成的Java文件目录，默认是target/generated-sources/protobuf下面 -->
                    <!--<outputDirectory>${project.build.directory}/generated-sources/protobuf</outputDirectory>-->
                    <!-- 是否清空输出文件，默认为是，如果是，outputDirectory下的项目工程会被清空。 -->
                    <!-- <clearOutputDirectory>false</clearOutputDirectory> -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>